<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd"
	default-lazy-init="false" default-autowire="byName">
	<description>Spring公共配置</description>
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.niuniu.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties" />
			
	<!-- 异步方法注解 -->
	<task:annotation-driven />			
	<bean class="com.niuniu.ym.common.util.SpringContextUtils"></bean>
	<!-- usergdb 数据源配置,使用应用内的DBCP数据库连接池  *********************************************-->
	<bean id="stockDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${user.jdbc.url}" />
		<property name="username" value="${user.jdbc.username}" />
		<property name="password" value="${user.jdbc.password}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="logAbandoned" value="${dbcp.logAbandoned}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!-- MyBatis配置 -->
	<bean id="stockSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="stockDataSource"/>	<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.niuniu.ym.entity,com.niuniu.ym.filter" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mapper/**/*Mapper.xml" />
		<!--<property name="plugins">  
            <ref bean="paginationInterceptor"/>  
        </property>-->
	</bean>
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="stockSqlSessionFactory"/>
		<property name="basePackage" value="com.niuniu.ym.dao,com.niuniu.ym.common.dao" />
		<property name="annotationClass" value="com.niuniu.ym.common.util.MyBatisRepository"/>
	</bean>

	<!-- 事务管理器, Jdbc单数据源事务 -->
	<bean id="stockTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="stockDataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="stockTransactionManager" proxy-target-class="true"/>
	
</beans>